import { Dialog } from './dialog';
/**
 * Create and show a input dialog for a number.
 *
 * @param options - The dialog setup options.
 *
 * @returns A promise that resolves with whether the dialog was accepted
 */
export declare function getNumber(options: InputDialog.INumberOptions): Promise<Dialog.IResult<number>>;
/**
 * Create and show a input dialog for a choice.
 *
 * @param options - The dialog setup options.
 *
 * @returns A promise that resolves with whether the dialog was accepted
 */
export declare function getItem(options: InputDialog.IItemOptions): Promise<Dialog.IResult<string>>;
/**
 * Create and show a input dialog for a text.
 *
 * @param options - The dialog setup options.
 *
 * @returns A promise that resolves with whether the dialog was accepted
 */
export declare function getText(options: InputDialog.ITextOptions): Promise<Dialog.IResult<string>>;
export declare namespace InputDialog {
    interface IOptions<T> extends Partial<Pick<Dialog.IOptions<T>, Exclude<keyof Dialog.IOptions<T>, 'body' | 'buttons' | 'defaultButton'>>> {
        /**
         * Label of the requested input
         */
        label: string;
    }
    interface INumberOptions extends IOptions<Number> {
        /**
         * Default value
         */
        value?: number;
    }
    interface IItemOptions extends IOptions<string> {
        /**
         * List of choices
         */
        items: Array<string>;
        /**
         * Default choice
         *
         * If the list is editable a string with a default value can be provided
         * otherwise the index of the default choice should be given.
         */
        current?: number | string;
        /**
         * Is the item editable?
         */
        editable?: boolean;
        /**
         * Placeholder text for editable input
         */
        placeholder?: string;
    }
    interface ITextOptions extends IOptions<string> {
        /**
         * Default input text
         */
        text?: string;
        /**
         * Placeholder text
         */
        placeholder?: string;
    }
}
